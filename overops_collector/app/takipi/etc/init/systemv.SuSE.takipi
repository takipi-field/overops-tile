#!/bin/bash
#
# 	/etc/init.d/takipi
#
# Handles starting and stopping Takipi.
#
#	www.takipi.com
#
### BEGIN INIT INFO
# Provides:          takipi
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: Starts Takipi
# Description:       Starts/stops the Takipi daemon
### END INIT INFO

# Read configuration variable file if it is present
TAKIPI_CONFIG=/etc/sysconfig/takipi

[ -r $TAKIPI_CONFIG ] || { echo "$TAKIPI_CONFIG missing";
	if [ "$1" = "stop" ]; then exit 0;
	else exit 6; fi; }

. $TAKIPI_CONFIG

export TAKIPI_BASE_URL
export TAKIPI_NATIVE_LIBRARIES
export JVM_LIB_FILE
export TAKIPI_MACHINE_NAME
export TAKIPI_INSTALLATION_TIME

PIDFILE=/var/run/takipi.pid

if [ "$http_proxy" = "" -a "$TAKIPI_HTTP_PROXY" != "" ]; then
	export http_proxy=$TAKIPI_HTTP_PROXY
fi

if [ "$https_proxy" = "" -a "$TAKIPI_HTTPS_PROXY" != "" ]; then
	export https_proxy=$TAKIPI_HTTPS_PROXY
fi

# Check the Takipi service binary is present
TAKIPI_BIN="$DAEMON"

[ -x $TAKIPI_BIN ] || { echo "$TAKIPI_BIN missing"; 
	if [ "$1" = "stop" ]; then exit 0;
	else exit 5; fi; }

# Source shell functions
. /etc/rc.status

# Reset status of this service
rc_reset



case "$1" in
    start)
		echo -n "Starting Takipi "

		## Start daemon with startproc(8). If this fails
		## the return value is set appropriately by startproc.
		/sbin/startproc -u root $TAKIPI_BIN --daemon --pidfile=$PIDFILE

		# Remember status and be verbose
		rc_status -v
		;;
    stop)
		echo -n "Shutting down Takipi "

		## Stop daemon with killproc(8) and if this fails
		## killproc sets the return value according to LSB.
		/sbin/killproc -TERM $TAKIPI_BIN

		# Remember status and be verbose
		rc_status -v
		;;
    try-restart|condrestart)
		## Do a restart only if the service was active before.
		## Note: try-restart is now part of LSB (as of 1.9).
		## RH has a similar command named condrestart.
		if [ "$1" = "condrestart" ]; then
			echo "${attn} Use try-restart ${done}(LSB)${attn} rather than condrestart ${warn}(RH)${norm}"
		fi

		$0 status
		if [ $? = 0 ]; then
			$0 restart
		else
			rc_reset	# Not running is not a failure.
		fi

		# Remember status and be quiet
		rc_status
		;;
    restart)
		## Stop the service and regardless of whether it was
		## running or not, start it again.
		$0 stop
		$0 start

		# Remember status and be quiet
		rc_status
		;;
    force-reload)
		echo -n "Reload Takipi "

		## Restart the service if it is running.
		$0 try-restart

		# Remember status and be quiet
		rc_status
		;;
    reload)
		## No-can-do
		rc_failed 3

		# Remember status and be venbose
		rc_status -v
		;;
    status)
		echo -n "Checking for Takipi "

		## Check status with checkproc(8), if process is running
		## checkproc will return with exit status 0.
		/sbin/checkproc $TAKIPI_BIN

		# NOTE: rc_status knows that we called this init script with
		# "status" option and adapts its messages accordingly.
		rc_status -v
		;;
    *)
		echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload}"
		exit 1
		;;
esac

rc_exit